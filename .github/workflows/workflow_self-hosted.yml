# This is a basic workflow to help you get started with Actions

name: Liquibase_CLI_Self-Hosted

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  workflow_dispatch:
   inputs:
      tag:
        description: 'tag'     
        required: false
        default: 'version1'
      
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  LBJobCLI:
    # The type of runner that the job will run on
    runs-on: self-hosted
    
    environment: 
      name: DEV
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
      - name: RunLiquibaseCLICommands
        uses: actions/checkout@v2
      
      # Runs a set of commands using the runners shell

      - run: |
          # Setting environment variables on the server side for the dev environment
          $Env:LIQUIBASE_PRO_LICENSE_KEY="${{ secrets.LIQUIBASE_PRO_LICENSE_KEY }}"
          $Env:LIQUIBASE_COMMAND_URL="${{ secrets.LIQUIBASE_COMMAND_URL }}"
          $Env:LIQUIBASE_COMMAND_USERNAME="${{ secrets.LIQUIBASE_COMMAND_USERNAME }}"
          $Env:LIQUIBASE_COMMAND_PASSWORD="${{ secrets.LIQUIBASE_COMMAND_PASSWORD }}"
          $Env:LIQUIBASE_COMMAND_CHANGELOG_FILE="${{ secrets.LIQUIBASE_COMMAND_CHANGELOG_FILE }}"
          $Env:LIQUIBASE_HUB_API_KEY="${{ secrets.LIQUIBASE_HUB_API_KEY }}"
          $Env:Path += ";C:\apps\liquibase"
          
          
          liquibase --version
          # Running Quality Checks
          liquibase --changelog-file=changelog.sql checks run
          
          # Checking pending changes
          liquibase --changelog-file=changelog.sql status --verbose
          
          # Applying a tag to bookmart a point to rollback to
          liquibase --changelog-file=changelog.sql tag "${{ github.event.inputs.tag }}"
          
          # Applying the changes and testing for any issues
          liquibase --changelog-file=changelog.sql --logLevel=info update
          
          # Rolling back changes to tag to validate rollbacks
          liquibase --changelog-file=changelog.sql --logLevel=info rollback "${{ github.event.inputs.tag }}"
          
          # Applying the changes to the database
          liquibase --changelog-file=changelog.sql --logLevel=info update
          
          # Showing deployment history
          liquibase history 
